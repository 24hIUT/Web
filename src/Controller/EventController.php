<?php

namespace App\Controller;

use Symfony\Component\Routing\Annotation\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\EmailType;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Symfony\Component\Form\Extension\Core\Type\PasswordType;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use App\Entity\Event;
use App\Entity\User;

class EventController extends Controller
{
    /**
     * @Route("/event/{url}", name="event")
     */
     public function index($url)
     {
         $repository = $this->getDoctrine()->getRepository(Event::class);
         $event = $repository->findOneBy([
             'randomString' => $url
         ]);

         if (!$event) {
             throw $this->createNotFoundException(
                 'No product found for randomString : '.$url
             );
           }

           return $this->render('event/event.html.twig', ['event'=>$event
           ]);
       }

    /** * @return string */
    private function generateUniqueFileName()
    { // md5() reduces the similarity of the file names generated by // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * @Route("/createEvent", name="createEvent")
     */
    public function createEvent(Request $request)
    {
        // just setup a fresh $task object (remove the dummy data)
        $event = new Event();

        $form = $this->createFormBuilder($event)
            ->add('title', TextType::class, array('required'=> True))
            ->add('description', TextareaType::class, array('required' => True))
            ->add('location', TextType::class)
            ->add('date', DateTimeType::class)
            ->add('save', SubmitType::class, array('label' => 'Signup'))
            ->getForm();

        $form->handleRequest($request);

        if ($form->isSubmitted()) {

            $event->setRandomString($this->generateUniqueFileName());
            $currentUser = new User;

            $repository = $this->getDoctrine()->getRepository(User::class);

            $currentUser = $repository->findOneBy(['id'=>$_SESSION["user"]->getId()]);

            $event->setOwner($currentUser);

            $entityManager = $this->getDoctrine()->getManager();

            // tell Doctrine you want to (eventually) save the Product (no queries yet)
            $entityManager->persist($event);

            // actually executes the queries (i.e. the INSERT query)
            $entityManager->flush();

            return new Response('Event created');
        }

        return $this->render('singup/index.html.twig', array(
            'form' => $form->createView(),
        ));
    }
}
